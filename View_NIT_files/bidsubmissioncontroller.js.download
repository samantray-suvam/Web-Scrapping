'use strict';
var uibModalInstance=null;
var certSerialNo="";
var SerialNo="";
var validOrNot = "0";
var validationObj = {isSigned:false};//This variable is used in terms and condition terms-conditions1.jsp for validating sign in; isSigned is true when user sign-in successfully.
//var non_validationObj = {isSigned:true};
postApp.controller('bidsubmission', ['$uibModal','$timeout','$location','$scope','$window', '$http',  'DTOptionsBuilder'  ,'DTColumnBuilder' ,'fileUpload' ,'createfolder' , 'vendorfileUpload',function($uibModal,$timeout,$location,$scope,$window, $http,DTOptionsBuilder,DTColumnBuilder,fileUpload,createfolder,vendorfileUpload ) {


	$scope.isSigned=null;
	//$scope.newfiles=[{}];
	$scope.vdoc=[{}];
	 $scope.locationid='';
	 $scope.depttid='';
	 $scope.subdeptid='';
	$scope.document = {};
	
	
	 function checkForm(form1)
	  {
		 var documentNameValidation = /(\=|\--|\'|\"|\#|\%)/;
		 
		 if(form1.foldername.value==''){
		    	alert("Please select folder type!!");
		 	      form1.foldername.focus();
		 	      return false;
		    } 
		 
		 if(form1.foldername.value=='tender-specific'){
			 if(form1.tid.value==''){
			    	alert("Please select tender!!");
			 	      form1.tid.focus();
			 	      return false;
			    } 
		 }
		 var reB =  /[$&"'!#]{1}/;
	    if(reB.test(form1.fname.value)) {
 	    	alert("Special character $ ,&, !,#, \" and \' are not allowed in folder name");
 	      form1.fname.focus();
 	      return false;
 	    }
	    
	    var reA =  /[$&"#'!]{1}/;
	    if(reA.test(form1.fdesc.value)) {
 	    	alert("Special character $ ,&, !,#, \" and \' are not allowed in description");
 	      form1.fdesc.focus();
 	      return false;
 	    }
	   
		function validationForFileName(docName){
			if(documentNameValidation.test(docName))
			{
				return true;
			}
			return false;
		}
		
		if(validationForFileName(form1.fname.value) == true || validationForFileName(form1.fdesc.value) == true){
			 alert(" Special characters like \--  \' \" = % are not allowed ");
	         return false;
		}
	    
 	   return true;
 	    		    
	    }
	 
	 
	 $scope.Submitfolder1 = function() {
			var form1=document.getElementById('form1');
			//var filterparams = filterParams(document.getElementsByName('form1')[0],userPassport)
				if(checkForm(document.getElementById('form1')))
				{
					
					$scope.Submitfolder();
				}
				
			
		};
	 
	 
	 $scope.Submitfolder=function(){ 
		 var foldertype=$scope.document.folder;		
	    	var foldername=$scope.document.foldername;	    	
	    	var folderdesc=$scope.document.folderdesc;	    	
	    	var tenderid=$scope.document.tenderid;	    	
	    	createfolder.createfolderforvendor(foldertype,foldername,folderdesc,tenderid).then(function(data) {
			 if(data.RESULT=='OK'){
				 alert("Folder created successfully!!!!");	
				 window.location.reload();
			 }else if(data.RESULT == '417'){
				 window.location.href="/logout?security=1";
				 return false;
			 }
			 else{
				  alert("Folder not created as Already Exists!!!");	
				 		
			 }
			 });    	
	    	
	    };
	    	   
	    $scope.SubmitfielUploaded=function(){	    	
	    	 var file =  [{}];	    	
	    	 var docdesc= [{}];    	
	    	 var tblbidsubfolderid=document.getElementById("bidsubfolderid").value;	    	
	    	 var foldername= document.getElementById("foldername").value;
	    	 var flag=null;
	    	// alert("sds"+document.getElementById("foldersize").value);
	    	 var size=document.getElementById("foldersize").value;
	    	 if(size<20){
	    	 for (var i = 0; i <$scope.vdoc.length; i++)
	            {
	    		// alert($scope.vdoc.length);
	    	 var fileid="file1"+i;
	    	 //alert("1st id"+fileid)
	    	 var thefile = document.getElementById(fileid);
			 var path=thefile.value; 
			 var newFileName = path.replace(/^.*[\\\/]/, '');
	         //alert("newwfilename"+newFileName);
	         var elements = document.getElementsByClassName("filenames");
	         var names = '';
	         var flag1=0;
	         for (var k = 0; k <$scope.vdoc.length; k++)
	            {
	        	 var fileid2="file1"+k;
		    	 //alert("2nd id"+fileid2)
	        	 var thefile2 = document.getElementById(fileid2);
				 var path2=thefile2.value; 
				 var newFileName2 = path2.replace(/^.*[\\\/]/, '');
			//	 alert("newfile"+k+"="+newFileName2);
				 if(i!=k && newFileName==newFileName2){
					 alert("Upload different files");
					 return false;
				 }
				 
	            }
	         
	         
	         
	         for(var j=0; j<elements.length; j++) {
	             names += elements[j].value;
	      //       alert("name===========>"+i+"="+names);
	             if(newFileName==names){
	            	 alert("file "+newFileName+" is already uploaded choose another file");
	            	 return false;
	             }
	             names='';
	         }
	            }
	    	 
	            for (var i = 0; i <$scope.vdoc.length; i++)
	            {
	            	
	                	var docdesc1=$scope.vdoc[i].docdesc;
	                	var file1= $scope.vdoc[i].uploadvendordocfile;
	                	//alert("file1==>"+file1);
	                	
	                	var id="file1"+i;
	                vendorfileUpload.uploadvendorFileToUrl(file1,tblbidsubfolderid,docdesc1,foldername).then(function(data)
	                		 {
	       			 if(data.RESULT=='OK'){
	       				 $('#loader-icon').show();
	       				 flag=1;
	       				 /*document.getElementById("file10").value="";
	       				 document.getElementById("desc").value="";
	       				*/ $('#loader-icon').hide();
	       				 window.location.reload();
	       			 }
	       			 else{
	       				  	flag=0;
	       				  /*document.getElementById("file1"+i).value="";
	       				  document.getElementById("desc").value="";*/
	       			 }
	       			});
	            }   
	            if(flag==1)
	            	{
	            	 alert("FILE UPLOADED WITH UUID="+data.FILEID);	
	            	}else if(flag==0)
	            		{
	            		alert("FILE NOT UPLAODED");		
	            		}
	    	
	    }
	    	 else{
	    		 alert("Document Library space full");
	    	 }
	    
}
	    
	    $scope.addnewdoc=function(){

	    	 $scope.vdoc.push({});
	    };
	    
	    
	    
    var serachenable=0;
    var todayTenderEnable=0;
    
    var vm = this;
    if(document.getElementById('flag')!=null){
    	
var flag=document.getElementById('flag').value;

if(flag=='procurement-summary' || flag=='tender-in-progress' || flag=='past-tenders' || flag=='joint-venture'|| flag=='jointventure-at-bidding'){
	
	 vm.dtOptions = DTOptionsBuilder.newOptions()
	 	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?status=0&id='+flag)
	         .withDataProp('data')
	       .withOption('filter', false)
	     .withOption('lengthMenu', [20,50,100])     
	        .withOption('processing', true)
	           .withOption('aDataSort', false)
	        .withOption('serverSide', true)
	        .withOption('bFilter', false)
	        .withOption('order',[2,'desc'])
	         .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        	 if(serachenable==1){
	        	 
	        	 
	        	 if($scope.advsearch==true){ 
	        	 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        	 Array.prototype.forEach.call(els, function(el) {
	        		 
	        		 
	        			   if(el.value!='' && document.getElementById('advstext').value!=''){
	        				   aoData.push({
	                               "name": 'SEARCH',
	                               "value": "NORMAL"
	                           }); 
	              	    	 aoData.push({
	                               "name": 'NMSKEY',
	                               "value": el.value
	                           });
	              	    	 aoData.push({
	                               "name": 'NMSVALUE',
	                               "value": document.getElementById('advstext').value,
	                           });
	              	    	 
	              	    }  else{
	      				   aoData.push({
	                           "name": 'SEARCH',
	                           "value": "NORMAL1"
	                       }); 
	          	    	 aoData.push({
	                           "name": 'NMSKEY',
	                           "value": el.value
	                       });
	          	    	 aoData.push({
	                           "name": 'NMSVALUE',
	                           "value": document.getElementById('advstext').value
	                       });
	          	    	 
	          	    } 
	        		 
	        		
	        	 
	        	     
	        	 });
	        	 
	         }
	        	 else{
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 Array.prototype.forEach.call(els, function(el) {
	   			  if(el.value!='' ){
	          	    	 
	          	    	 aoData.push({
	                           "name": el.name,
	                           "value": el.value
	                       });
	          	    	 
	          	    	 
	          	    }
	        		 });
	   		 }
	         }
	        	 
	                
	        	 //serachenable=0;   

	        	 var csrftoken = $("meta[name='_csrf']").attr("content");
	        	 	$.ajax({

	                    "dataType": "json",
	                    "type": "POST",

	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&status=0&id='+flag,

	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        $scope.setAutoSearchVariable(json.searchKeyWordDto);
	                        fnCallback(json);
	                        $scope.$apply();
	                    }
	                });
	            })
	        
	        
	        .withPaginationType('full_numbers');
	    vm.dtColumns = [
	                    DTColumnBuilder.newColumn('1').withTitle('Sr No.').withOption('width', '60'),
	        	        DTColumnBuilder.newColumn('2').withTitle('IFB/Tender Notice No.').withOption('width', '120'),
	        	        DTColumnBuilder.newColumn('3').withTitle('Tender ID	').withOption('width', '55'),
	                    DTColumnBuilder.newColumn('4').withTitle('Name of Work/Description of Material').withOption('width', '168'),
	        	        DTColumnBuilder.newColumn('5').withTitle('Estimated Contract Value').withOption('width', '95'),
	        	        DTColumnBuilder.newColumn('6').withTitle('Client Name').withOption('width', '100'),
	        	        DTColumnBuilder.newColumn('7').withTitle('Bid Document Download Start Date').withOption('width', '100'),
	        	        DTColumnBuilder.newColumn('8').withTitle('Bid Document Download End Date').withOption('width', '100'), 
	        	        DTColumnBuilder.newColumn('9').withTitle('Bid Submission Closing Date').withOption('width', '100'),
	        	        DTColumnBuilder.newColumn('10').withTitle('Action').withOption('width', '145').notSortable()
	       
	    ];
	    	



}
else if(flag=='search-result'){
	 vm.dtOptions = DTOptionsBuilder.newOptions()
	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?id='+flag)
	         .withDataProp('data')
	       .withOption('filter', false)
	     .withOption('lengthMenu', [20,50,100])     
	        .withOption('processing', true)
	           .withOption('aDataSort', false)
	        .withOption('serverSide', true)
	      
	         .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        	 if(serachenable==1){
	        	 
	        	 
	        	 if($scope.advsearch==true){ 
	        	 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        	 Array.prototype.forEach.call(els, function(el) {
	        		 
	        		 
	        			   if(el.value!='' && document.getElementById('advstext').value!=''){
	        				   aoData.push({
	                               "name": 'SEARCH',
	                               "value": "NORMAL"
	                           }); 
	              	    	 aoData.push({
	                               "name": 'NMSKEY',
	                               "value": el.value
	                           });
	              	    	 aoData.push({
	                               "name": 'NMSVALUE',
	                               "value": document.getElementById('advstext').value,
	                           });
	              	    	 
	              	    } 
	        		 
	        		
	        	 
	        	     
	        	 });
	        	 
	         }
	        	 else{
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 Array.prototype.forEach.call(els, function(el) {
	   			  if(el.value!='' ){
	          	    	 
	          	    	 aoData.push({
	                           "name": el.name,
	                           "value": el.value
	                       });
	          	    	 
	          	    	 
	          	    }
	        		 });
	   		 }
	         }
	        	 
	                
	        	 //serachenable=0;   
	        	 var csrftoken = $("meta[name='_csrf']").attr("content"); 
	                $.ajax({
	                    "dataType": "json",
	                    "type": "POST",
	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&id='+flag,
	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        fnCallback(json);
	                        $scope.$apply();
	                        //to select only single checkbox
	                        $(".singleselect").click(function(){
	                        	if($(this).is(":checked")){
	                        		$(".singleselect").prop("checked",false);
	                        		$(this).prop('checked', true);
	                        		$("#tenderId").val($(this).val());
	                        	}else{
	                        		$("#tenderId").val("");
	                        	}
	                        });
	                    }
	                });
	                
	            })
	        
	        
	        .withPaginationType('full_numbers');
	    vm.dtColumns = [
       
	                    DTColumnBuilder.newColumn('1').withTitle(''),
	              	  DTColumnBuilder.newColumn('2').withTitle('Sr No.'),
	              	        DTColumnBuilder.newColumn('3').withTitle('Tender Notice No.'),
	              	        DTColumnBuilder.newColumn('4').withTitle('Tender ID	')
	              	        ,
	              	        DTColumnBuilder.newColumn('5').withTitle('Name of Work')
	              	        ,
	              	        DTColumnBuilder.newColumn('6').withTitle('Estimated Contract Value'),
	              	        ,
	              	        DTColumnBuilder.newColumn('7').withTitle('Tender Sales Start Date'),
	              	        DTColumnBuilder.newColumn('8').withTitle('Tender Sales End Date'),
	              	        
	              	        DTColumnBuilder.newColumn('9').withTitle('Bid Submission Closing Date'),
	              	        DTColumnBuilder.newColumn('10').withTitle('Action').notSortable()   
	    ];
}
else if(flag=='document-library'){


	 vm.dtOptions = DTOptionsBuilder.newOptions()
	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?id='+flag)
	         .withDataProp('data')
	       .withOption('filter', false)
	     .withOption('lengthMenu', [20,50,100])     
	        .withOption('processing', true)
	           .withOption('aDataSort', false)
	        .withOption('serverSide', true)
	        
	         .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        	 if(serachenable==1){
	        	 
	        	 
	        	 if($scope.advsearch==true){ 
	        	 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        	 Array.prototype.forEach.call(els, function(el) {
	        		 
	        		 
	        			   if(el.value!='' && document.getElementById('advstext').value!=''){
	        				   aoData.push({
	                               "name": 'SEARCH',
	                               "value": "NORMAL"
	                           }); 
	              	    	 aoData.push({
	                               "name": 'NMSKEY',
	                               "value": el.value
	                           });
	              	    	 aoData.push({
	                               "name": 'NMSVALUE',
	                               "value": document.getElementById('advstext').value,
	                           });
	              	    	 
	              	    } 
	        		 
	        		
	        	 
	        	     
	        	 });
	        	 
	         }
	        	 else{
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 Array.prototype.forEach.call(els, function(el) {
	   			  if(el.value!='' ){
	          	    	 
	          	    	 aoData.push({
	                           "name": el.name,
	                           "value": el.value
	                       });
	          	    	 
	          	    	 
	          	    }
	        		 });
	   		 }
	         }
	        	 
	                
	        	 //serachenable=0;   
	        	 var csrftoken = $("meta[name='_csrf']").attr("content");  
	                $.ajax({
	                    "dataType": "json",
	                    "type": "POST",
	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&id='+flag,
	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        fnCallback(json);
	                        $scope.$apply();
	                    }
	                });
	            })
	        
	        
	        .withPaginationType('full_numbers');
	    vm.dtColumns = [
         
	                    
	  DTColumnBuilder.newColumn('1').withTitle('Folder Name'),
	        DTColumnBuilder.newColumn('2').withTitle('Description'),
	        DTColumnBuilder.newColumn('3').withTitle('IFB/Tender Notice No.') 
	      
	        ,
	        DTColumnBuilder.newColumn('4').withTitle('Folder Size')
	        ,
	        DTColumnBuilder.newColumn('5').withTitle('Created Date'),
	        ,
	        DTColumnBuilder.newColumn('6').withTitle('Upload File'),
	       
	    ];
	    	


}
else if(flag=='bid-history'){
	var vm = this;
	 vm.dtOptions = DTOptionsBuilder.newOptions()
	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?status=0&id='+flag)
	        .withDataProp('data')
	        .withOption('filter', false)
	        .withOption('lengthMenu', [20,50,100])     
	        .withOption('processing', true)
	        .withOption('aDataSort', false)
	        .withOption('serverSide', true)
	        .withOption('bFilter', false)
	        .withOption('order', [3,'desc'])
	        .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        	 if(serachenable==1){
	        	 
	        	 
	        	 if($scope.advsearch==true){ 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        		 Array.prototype.forEach.call(els, function(el) {
	        		 if(el.value!='' && document.getElementById('advstext').value!=''){
       				   aoData.push({
                              "name": 'SEARCH',
                              "value": "NORMAL"
                          }); 
             	    	 aoData.push({
                              "name": 'NMSKEY',
                              "value": el.value
                          });
             	    	 aoData.push({
                              "name": 'NMSVALUE',
                              "value": document.getElementById('advstext').value,
                          });
             	    	 
             	    }  else{
     				   aoData.push({
                          "name": 'SEARCH',
                          "value": "NORMAL1"
                      }); 
         	    	 aoData.push({
                          "name": 'NMSKEY',
                          "value": el.value
                      });
         	    	 aoData.push({
                          "name": 'NMSVALUE',
                          "value": document.getElementById('advstext').value
                      });	 
         	    }
	        	 });
	        	 
	         }
	        	 else{
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 Array.prototype.forEach.call(els, function(el) {
	   			  if(el.value!='' ){
	          	    	 
	          	    	 aoData.push({
	                           "name": el.name,
	                           "value": el.value
	                       });
	          	    	 
	          	    	 
	          	    }
	        		 });
	   		 }
	         }
	        	 
	                
	        	// serachenable=0;   
	        	 var csrftoken = $("meta[name='_csrf']").attr("content"); 
	                $.ajax({
	                    "dataType": "json",
	                    "type": "POST",
	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&id='+flag,
	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        $scope.setAutoSearchVariable(json.searchKeyWordDto);
	                        fnCallback(json);
	                        $scope.$apply();
	                    }
	                });
	            })
	        
	        
	        .withPaginationType('full_numbers');
	    vm.dtColumns = [
          
DTColumnBuilder.newColumn('1').withTitle('Sr No.'),
DTColumnBuilder.newColumn('2').withTitle('IFB/Tender Notice No.'),
DTColumnBuilder.newColumn('3').withTitle('Tender ID'),
DTColumnBuilder.newColumn('4').withTitle('Description'), 

,
DTColumnBuilder.newColumn('5').withTitle('Estimated Cost(INR)'),
,
DTColumnBuilder.newColumn('6').withTitle('Document Start Date').notSortable(),
,
DTColumnBuilder.newColumn('7').withTitle('Document End Date'),
,
DTColumnBuilder.newColumn('8').withTitle('Bid Closing Date'),
,
DTColumnBuilder.newColumn('9').withTitle('Action').withOption("width","110").notSortable()
	       
	    ];
	    	

}
else if(flag=='bids-in-process'){
	 vm.dtOptions = DTOptionsBuilder.newOptions()
	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?id='+flag)
	         .withDataProp('data')
	       .withOption('filter', false)
	     .withOption('lengthMenu', [20,50,100])     
	        .withOption('processing', true)
	           .withOption('aDataSort', false)
	        .withOption('serverSide', true)
	        
	         .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        	 if(serachenable==1){
	        	 
	        	 
	        	 if($scope.advsearch==true){ 
	        	 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        	 Array.prototype.forEach.call(els, function(el) {
	        		 
	        		 
	        			   if(el.value!='' && document.getElementById('advstext').value!=''){
	        				   aoData.push({
	                               "name": 'SEARCH',
	                               "value": "NORMAL"
	                           }); 
	              	    	 aoData.push({
	                               "name": 'NMSKEY',
	                               "value": el.value
	                           });
	              	    	 aoData.push({
	                               "name": 'NMSVALUE',
	                               "value": document.getElementById('advstext').value,
	                           });
	              	    	 
	              	    } 
	        		 
	        		
	        	 
	        	     
	        	 });
	        	 
	         }
	        	 else{
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 Array.prototype.forEach.call(els, function(el) {
	   			  if(el.value!='' ){
	          	    	 
	          	    	 aoData.push({
	                           "name": el.name,
	                           "value": el.value
	                       });
	          	    	 
	          	    	 
	          	    }
	        		 });
	   		 }
	         }
	        	 
	                
	        	 //serachenable=0 jatin;   
	        	 var csrftoken = $("meta[name='_csrf']").attr("content");
	                $.ajax({
	                    "dataType": "json",
	                    "type": "POST",
	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&id='+flag,
	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        fnCallback(json);
	                        $scope.$apply();
	                    }
	                });
	            })
	        
	        
	        .withPaginationType('full_numbers');
	 vm.dtColumns = [
DTColumnBuilder.newColumn('1').withTitle('Sr No.'),
DTColumnBuilder.newColumn('2').withTitle('IFB/Tender Notice No.'),
DTColumnBuilder.newColumn('3').withTitle('Tender ID'),
DTColumnBuilder.newColumn('4').withTitle('Description'), 

,
DTColumnBuilder.newColumn('5').withTitle('Estimated Cost(INR)'),
,
DTColumnBuilder.newColumn('6').withTitle('Document Start Date'),
,
DTColumnBuilder.newColumn('7').withTitle('Document End Date'),
,
DTColumnBuilder.newColumn('8').withTitle('Bid Closing Date'),
,
DTColumnBuilder.newColumn('9').withTitle('Action').withOption("width","110").notSortable()
	    ];
	    	
}
else if(flag=='task-to-do'){
	 vm.dtOptions = DTOptionsBuilder.newOptions()
	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?id='+flag)
	         .withDataProp('data')
	       .withOption('filter', false)
	     .withOption('lengthMenu', [20,50,100])     
	        .withOption('processing', true)
	           .withOption('aDataSort', false)
	        .withOption('serverSide', true)
	        
	         .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        	 if(serachenable==1){
	        	 
	        	 
	        	 if($scope.advsearch==true){ 
	        	 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        	 Array.prototype.forEach.call(els, function(el) {
	        		 
	        		 
	        			   if(el.value!='' && document.getElementById('advstext').value!=''){
	        				   aoData.push({
	                               "name": 'SEARCH',
	                               "value": "NORMAL"
	                           }); 
	              	    	 aoData.push({
	                               "name": 'NMSKEY',
	                               "value": el.value
	                           });
	              	    	 aoData.push({
	                               "name": 'NMSVALUE',
	                               "value": document.getElementById('advstext').value,
	                           });
	              	    	 
	              	    } 
	        		 
	        		
	        	 
	        	     
	        	 });
	        	 
	         }
	        	 else{
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 Array.prototype.forEach.call(els, function(el) {
	   			  if(el.value!='' ){
	          	    	 
	          	    	 aoData.push({
	                           "name": el.name,
	                           "value": el.value
	                       });
	          	    	 
	          	    	 
	          	    }
	        		 });
	   		 }
	         }
	        	 
	                
	        	 //serachenable=0;   
	        	 var csrftoken = $("meta[name='_csrf']").attr("content"); 
	                $.ajax({
	                    "dataType": "json",
	                    "type": "POST",
	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&id='+flag,
	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        fnCallback(json);
	                        $scope.$apply();
	                    }
	                });
	            })
	        
	        
	        .withPaginationType('full_numbers');
	    vm.dtColumns = [
	        
DTColumnBuilder.newColumn('1').withTitle('Sr No.'),
DTColumnBuilder.newColumn('2').withTitle('IFB/Tender Notice No.'),
DTColumnBuilder.newColumn('3').withTitle('Tender ID'),
DTColumnBuilder.newColumn('4').withTitle('Description'), 

,
DTColumnBuilder.newColumn('5').withTitle('Estimated Cost(INR)'),
,
DTColumnBuilder.newColumn('6').withTitle('Document Start Date'),
,
DTColumnBuilder.newColumn('7').withTitle('Document End Date'),
,
DTColumnBuilder.newColumn('8').withTitle('Bid Closing Date'),
,
DTColumnBuilder.newColumn('9').withTitle('Action').withOption("width","110").notSortable()
	    ];
	    	
}
else if(flag=='favourites'){
	 vm.dtOptions = DTOptionsBuilder.newOptions()
	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?id='+flag)
	         .withDataProp('data')
	       .withOption('filter', false)
	     .withOption('lengthMenu', [20,50,100])     
	        .withOption('processing', true)
	           .withOption('aDataSort', false)
	        .withOption('serverSide', true)
	        
	         .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        	 if(serachenable==1){
	        	 
	        	 
	        	 if($scope.advsearch==true){ 
	        	 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        	 Array.prototype.forEach.call(els, function(el) {
	        		 
	        		 
	        			   if(el.value!='' && document.getElementById('advstext').value!=''){
	        				   aoData.push({
	                               "name": 'SEARCH',
	                               "value": "NORMAL"
	                           }); 
	              	    	 aoData.push({
	                               "name": 'NMSKEY',
	                               "value": el.value
	                           });
	              	    	 aoData.push({
	                               "name": 'NMSVALUE',
	                               "value": document.getElementById('advstext').value,
	                           });
	              	    	 
	              	    } 
	        		 
	        		
	        	 
	        	     
	        	 });
	        	 
	         }
	        	 else{
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 Array.prototype.forEach.call(els, function(el) {
	   			  if(el.value!='' ){
	          	    	 
	          	    	 aoData.push({
	                           "name": el.name,
	                           "value": el.value
	                       });
	          	    	 
	          	    	 
	          	    }
	        		 });
	   		 }
	         }
	        	 
	                
	        	 //serachenable=0;   
	        	 var csrftoken = $("meta[name='_csrf']").attr("content"); 
	                $.ajax({
	                    "dataType": "json",
	                    "type": "POST",
	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&id='+flag,
	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        fnCallback(json);
	                        $scope.$apply();
	                    }
	                });
	            })
	        
	        
	        .withPaginationType('full_numbers');
	    vm.dtColumns = [
DTColumnBuilder.newColumn('1').withTitle('Sr No.'),
DTColumnBuilder.newColumn('2').withTitle('IFB/Tender Notice No.'),
DTColumnBuilder.newColumn('3').withTitle('Tender ID'),
DTColumnBuilder.newColumn('4').withTitle('Description'), 

,
DTColumnBuilder.newColumn('5').withTitle('Estimated Cost(INR)'),
,
DTColumnBuilder.newColumn('6').withTitle('Document Start Date'),
,
DTColumnBuilder.newColumn('7').withTitle('Document End Date'),
,
DTColumnBuilder.newColumn('8').withTitle('Bid Closing Date'),
,
DTColumnBuilder.newColumn('9').withTitle('Action').withOption("width","110").notSortable()
	    ];
	    	
}else if(flag=='CommonTenderSummary'){
	var displayPage = $("#displayPage").val();
	if(displayPage=="2"){
		flag = "";
		flag = "favourites";
	}else if(displayPage=="3"){
		flag = "";
		flag = "task-to-do";
	}else if(displayPage=="4"){
		flag = "";
		flag = "bids-in-process";
	}else if(displayPage=="5"){
		flag = "";
		flag = "bid-history";
	} 
	var status = 1;
	 vm.dtOptions = DTOptionsBuilder.newOptions()
	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?status=1&id='+flag)
	    .withDataProp('data')
	    .withOption('filter', false)
	    .withOption('lengthMenu', [20,50,100])     
	    .withOption('processing', true)
	    .withOption('aDataSort', false)
	    .withOption('serverSide', true)
   	    .withOption('bFilter', false)
	    .withOption('order',[2,'desc'])
	    .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        if(serachenable==1){
	        	status = 0;
	        	 if($scope.todaySearch==true){
	        		 aoData.push({
                         "name": 'SEARCH',
                         "value": document.getElementById('todaySearch').value
                     });
	        	 } else if($scope.advsearch==true){ 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        		 	Array.prototype.forEach.call(els, function(el) {
	        		 	   if(el.value!='' && document.getElementById('advstext').value!=''){
	        				   aoData.push({
	                               "name": 'SEARCH',
	                               "value": "NORMAL"
	                           }); 
	              	    	 aoData.push({
	                               "name": 'NMSKEY',
	                               "value": el.value
	                           });
	              	    	 aoData.push({
	                               "name": 'NMSVALUE',
	                               "value": document.getElementById('advstext').value,
	                           });
	              	     } else {
		      				   aoData.push({
		                           "name": 'SEARCH',
		                           "value": "NORMAL1"
		                       }); 
		          	    	 aoData.push({
		                           "name": 'NMSKEY',
		                           "value": el.value
		                       });
		          	    	 aoData.push({
		                           "name": 'NMSVALUE',
		                           "value": document.getElementById('advstext').value
		                       });
		          	    }
	        	    });
	        	 }else {
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 	  Array.prototype.forEach.call(els, function(el) {
	        			 if(el.value!='' ){
	          	    	       aoData.push({
	                           "name": el.name,
	                           "value": el.value
	          	    	       });
	        			 	 }
	        		 	 });
	        	 	}
	         }
	       
	        	 var csrftoken = $("meta[name='_csrf']").attr("content"); 
	                $.ajax({
	                    "dataType": "json",
	                    "type": "POST",
	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&status='+status+'&id='+flag,
	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        fnCallback(json);
	                        $scope.$apply();
	                    }
	                });
	            })
	        
	        
	        .withPaginationType('full_numbers');
	    vm.dtColumns = [
DTColumnBuilder.newColumn('1').withTitle('Sr No.').withOption('width', '35px'),
DTColumnBuilder.newColumn('2').withTitle('IFB/Tender Notice No.').withOption('width', '120px'),
DTColumnBuilder.newColumn('3').withTitle('Tender ID').withOption('width', '40px'),
DTColumnBuilder.newColumn('4').withTitle('Name of Work/Description of Material').withOption('width', '170px'), 
DTColumnBuilder.newColumn('5').withTitle('Estimated Contract Value').withOption('width', '90px'),
DTColumnBuilder.newColumn('6').withTitle('Bid Document Download Start Date').withOption('width', '80px'),
DTColumnBuilder.newColumn('7').withTitle('Bid Document Download End Date').withOption('width', '80px'),
DTColumnBuilder.newColumn('8').withTitle('Bid Submission Start Date').withOption('width', '78px'),
DTColumnBuilder.newColumn('9').withTitle('Bid Submission Closing Date').withOption('width', '80px'),
DTColumnBuilder.newColumn('10').withTitle('Action').withOption("width","213px").notSortable()
	    ];
	    
}
else if (flag=='e-notices'){
	vm.dtOptions = DTOptionsBuilder.newOptions()
    
    .withOption('sAjaxSource', '/bidsubmission/tablelist?id='+flag)
         .withDataProp('data')
       .withOption('filter', false)
     .withOption('lengthMenu', [20,50,100])     
        .withOption('processing', true)
           .withOption('aDataSort', false)
        .withOption('serverSide', true)
        
         .withOption('fnServerData', function (sSource, aoData, fnCallback) {
        	 if(serachenable==1){
        	 
        	 if($scope.advsearch==true){ 
        	 
        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
        	 Array.prototype.forEach.call(els, function(el) {
        		 
        		 
        			   if(el.value!='' && document.getElementById('advstext').value!=''){
        				   aoData.push({
                               "name": 'SEARCH',
                               "value": "NORMAL"
                           }); 
              	    	 aoData.push({
                               "name": 'NMSKEY',
                               "value": el.value
                           });
              	    	 aoData.push({
                               "name": 'NMSVALUE',
                               "value": document.getElementById('advstext').value,
                           });
              	    	 
              	    } 
        		 
        		
        	 
        	     
        	 });
        	 
         }
        	 else{
        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
        		 aoData.push({
        			 "name": 'SEARCH',
                     "value": "ADV"
                 }); 
        		 Array.prototype.forEach.call(els, function(el) {
   			  if(el.value!='' ){
          	    	 
          	    	 aoData.push({
                           "name": el.name,
                           "value": el.value
                       });
          	    	 
          	    	 
          	    }
        		 });
   		 }
         }
        	 
                
        	 //serachenable=0;   
        	 var csrftoken = $("meta[name='_csrf']").attr("content"); 
                $.ajax({
                    "dataType": "json",
                    "type": "POST",
                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&id='+flag,
                    "data": aoData,
                    "success": function (json) {
                        $scope.tableData = json.data;
                        $scope.TagCloud = json.TagCloud;
                        $scope.CustCols = json.CustCols;
                        fnCallback(json);
                        $scope.$apply();
                    }
                });
            })
        
        
        .withPaginationType('full_numbers');
    vm.dtColumns = [
  DTColumnBuilder.newColumn('1').withTitle('Sender Name'),
        DTColumnBuilder.newColumn('2').withTitle('Subject'),
        DTColumnBuilder.newColumn('3').withTitle('Arrival Date') 
    ];
	}
else if(flag=='procurement_summary'){
	 vm.dtOptions = DTOptionsBuilder.newOptions()
	    
	    .withOption('sAjaxSource', '/bidsubmission/tablelist?id='+flag)
	         .withDataProp('data')
	       .withOption('filter', false)
	     .withOption('lengthMenu', [20,50,100])     
	        .withOption('processing', true)
	           .withOption('aDataSort', false)
	        .withOption('serverSide', true)
	        
	         .withOption('fnServerData', function (sSource, aoData, fnCallback) {
	        	 if(serachenable==1){
	        	 
	        	 
	        	 if($scope.advsearch==true){ 
	        	 
	        		 var els = document.getElementsByClassName("c1datableserachNORMAL");
	        	 Array.prototype.forEach.call(els, function(el) {
	        		 
	        		 
	        			   if(el.value!='' && document.getElementById('advstext').value!=''){
	        				   aoData.push({
	                               "name": 'SEARCH',
	                               "value": "NORMAL"
	                           }); 
	              	    	 aoData.push({
	                               "name": 'NMSKEY',
	                               "value": el.value
	                           });
	              	    	 aoData.push({
	                               "name": 'NMSVALUE',
	                               "value": document.getElementById('advstext').value,
	                           });
	              	    	 
	              	    } 
	        		 
	        		
	        	 
	        	     
	        	 });
	        	 
	         }
	        	 else{
	        		 var els = document.getElementsByClassName("ui-autocomplete-input"); 
	        		 aoData.push({
	        			 "name": 'SEARCH',
	                     "value": "ADV"
	                 }); 
	        		 Array.prototype.forEach.call(els, function(el) {
	   			  if(el.value!='' ){
	          	    	 
	          	    	 aoData.push({
	                           "name": el.name,
	                           "value": el.value
	                       });
	          	    	 
	          	    	 
	          	    }
	        		 });
	   		 }
	         }
	        	 
	                
	        	 //serachenable=0;   
	        	 var csrftoken = $("meta[name='_csrf']").attr("content");
	                $.ajax({
	                    "dataType": "json",
	                    "type": "POST",
	                    "url": '/bidsubmission/tablelist?_csrf='+csrftoken+'&id='+flag,
	                    "data": aoData,
	                    "success": function (json) {
	                        $scope.tableData = json.data;
	                        $scope.TagCloud = json.TagCloud;
	                        $scope.CustCols = json.CustCols;
	                        fnCallback(json);
	                        $scope.$apply();
	                    }
	                });
	            })
	        
	        
	        .withPaginationType('full_numbers');
	    vm.dtColumns = [
	  DTColumnBuilder.newColumn('1').withTitle('Tender To Do'),
	        DTColumnBuilder.newColumn('2').withTitle('Tender Applied'),
	        DTColumnBuilder.newColumn('3').withTitle('Tender Awarded') 
	    ];
	    	
}
   
 
    
    }
    $scope.nested = {};
    $scope.nested.dtInstance = {}
  
	 $scope.advsearch=true;
    $scope.todaySearch=true;
    $scope.advsearchClick=function(){
//    	alert(1);   parameter2  
     	var tenderid =  $('#tenderid').val();    
    	var tenderpublishdate =  $('#tenderpublishdate').val(); //  01-06-2018
    	var tenderpublish = tenderpublishdate.split("-");
    	//alert(tenderpublish);
    	
    
     	var bidclosedate =  $('#bidclosedate').val();  // 30-05-2018
    	var  bidclose = bidclosedate.split("-");
     	
    	if(bidclose[1]==tenderpublish[1] && bidclose[2]==tenderpublish[2])
    		{ 
    		if(bidclose[0]<tenderpublish[0])
    			{
    			alert("Bid Closing Date should be greater than Tender Publishing Date11111");
    			return;
    			}
    		}
     	if(bidclose[1]<tenderpublish[1] && bidclose[2]<tenderpublish[2])
		{ 
		
			alert("Bid Closing Date should be greater than Tender Publishing Date111122221");
			return;
			
		}
    
    	if(bidclose[2]<tenderpublish[2])
		{ 
		
			alert("Bid Closing Date should be greater than Tender Publishing Date12331111");
			return;
			
		}
    	
    
    
     	if(tenderid!='')
     		{
     		if(isNaN(tenderid))
     			{
     			alert("Please enter numeric data in TenderId.");
     			return false;
     			}
     		}
     	
  /*   	
    	var ecvdrop =  $('#valuecriteria').val();
    	alert(ecvdrop);
    	if(ecvdrop!='')
    		{
    		
    		
     	var ecv2 =  $('#parameter2').val();
     	var str1 = ecv2.toString();
    	if(!str1.match(/^-?[0-9]*[.][0-9]+$/)) {
    	    alert("Please enter numeric value with max. 2 decimals");
    	    return;
    	}
    	
       	var ecv3 =  $('#parameter3').val();
     	var str2 = ecv3.toString();
    	if(!str2.match(/^-?[0-9]*[.][0-9]+$/)) {
    	    alert("Please enter numeric value with max. 2 decimals");
    	    return;
    	}
    		}*/
     	
     	if(document.getElementById('flag')!=null){
        	
     		var flag=document.getElementById('flag').value;

     		if(!flag=='tender-in-progress')
     			{
     	
     	 var ecv = document.getElementById("parameter2").value;	 
    	 var ecv2 =document.getElementById("parameter3").value;
		   var selectParameter = document.getElementById("parameter1").value;	
		   var valueCriteria= document.getElementById("valuecriteria").value;	
			 if(selectParameter=='' && ecv!='' && valueCriteria!=''){
				 alert("Please select the parameter");
				 return false; 
			 }
			 if(selectParameter!=''&& valueCriteria!='' && ecv==''){
				 alert("Please fill the value ");
				 return false; 
			 }
			 if(selectParameter!='' && ecv!='' && valueCriteria==''){
				 alert("Please select the value criteria ");
				 return false;
			 }
			 if(selectParameter!='' && ecv==''){
				 alert("Please fill the value ");
				 return false;
			 }
			 if(selectParameter=='between' && ecv2=='' ){
				 
				 alert("Please fill the Second value ");
				 return false;
			 }
			  if( ecv!='' && ecv2!='' ){
				 if(parseInt(ecv2) <= parseInt(ecv)){
				 alert("second value should not be less than first value");
				 $('#ecv2').val('');
				 flag=1;
				 return false;}
			 }
     			}
     		
     			}
			 
    	$scope.todaySearch=false;
    	validOrNot = $("#isValidation").val();
//    	alert("validOrNot : "+validOrNot)
//    	if(validOrNot=="0")
    	{
        	serachenable=1;
        	angular.element( document.querySelector('#advstext')).val('');
        	$scope.selectedValue='';
        	$scope.nested.dtInstance.dataTable.fnDraw();	
    	}
    	
    	
    }
    
    $scope.todayAdvSearchClick=function(){
    		$scope.todaySearch=true;
    		serachenable=1;
        	angular.element(document.querySelector('#advstext')).val('');
        	$scope.selectedValue='';
        	$scope.nested.dtInstance.dataTable.fnDraw();	
    }
    
    
    
    $scope.normSearchClick=function(){
    	
    	 if($('#advskey option:selected').val()=="")
     	{
     	alert("Please select one option from search by field.");
     	}
    	  else
	    	{
	    	    if(document.getElementById("advstext").value == "" || document.getElementById("advstext").value == null)
	    		{
	    		alert("Please enter some value in search field.");
	    		
	    		}
	    	    else
	    		{
	    	    	$scope.todaySearch=false;
	    	    	$scope.advsearch=true;
			    	serachenable=1;
			   	    $scope.nested.dtInstance.dataTable.fnDraw();	
	    		}
				   }
 
   }
    
	 $scope.hideAdvSearch=function(){
		 
		 $('#clientname').val('');
		
			 $scope.locationid='';
			 $scope.depttid='';
			 $scope.subdeptid='';
		 if(	$scope.advsearch==false){
			 	serachenable=1;
				$scope.advsearch=true;
				angular.element( document.querySelector('#advstext')).val('');
		    	$scope.selectedValue='';
		 }
		 else{

		    	angular.element( document.querySelector('#advstext')).val('');
		    	$scope.selectedValue='';
		    	serachenable=1;
				$scope.advsearch=false;
		 }
		 $('#location').empty();
			$('#departmentName').empty();
			$('#subDepartmentName').empty();//remove all child nodes
			var newOption = $('<option value="">----Select----</option>');
			
			$('#location').append(newOption);
			var newOption = $('<option value="">----Select----</option>');
			$('#departmentName').append(newOption);
			var newOption = $('<option value="">----Select----</option>');
			$('#subDepartmentName').append(newOption);
		 $('#location').prop('selectedIndex',0);
	     $('#clientname').prop('selectedIndex',0);
		 $('#departmentName').prop('selectedIndex',0);
		 $('#subDepartmentName').prop('selectedIndex',0);
		 $('#tendertitle').val("");
		 $('#tenderid').val('');
		 $('#parameter1').val('');
		 $('#parameter2').val('');
		 $('#parameter3').val('');
		 $('#valuecriteria').prop('selectedIndex',0);
		 $('#ecv').prop('selectedIndex',0);
		 $('#tnoticeno').val("");
		 $('#nameOfProject').val("");
		 $('#tenderpublishdate').val('');
		 $('#bidclosedate').val('');
		 $('#sectorcategory').prop('selectedIndex',0);
		 $('#tendertype').prop('selectedIndex',0);
		 $('#tendernoticeid').val("");
		 $('#selecttype').prop('selectedIndex',0);
		 $('#tendercategory').val("");
		 $('#tstatus').prop('selectedIndex',0);
		 $('#tformofcontract').prop('selectedIndex',0);
		 $('#productcategory').prop('selectedIndex',0);
		 $('#proctype').prop('selectedIndex',0);
		 
		 $scope.advsearchClick();
	 }
	 $scope.dataArray = [];
	 $scope.verifydataencryptiondecryption=function(){
		 if($scope.isSigned!=true){
			 
			 var ifExistSerialNo=$('#bidderTenderSerialNo').val().toLowerCase();
  		   if(ifExistSerialNo==null || ifExistSerialNo.trim()=="" || ifExistSerialNo.trim()=="0" || $('#loggeduserencryptcert').val().toLowerCase()===ifExistSerialNo ){
			 $("#encrypt").attr("disabled","disabled");
			 var dscDate=$("#dscDateId").val();
		 $scope.action="verifydataencryption";
		   var mappeddata = MakeMap();
		   var myurl=getnCodeUrl();
		   var jsondata = {"methodName": "encryptFormDataDSC","formData": mappeddata, "serialno":$('#loggeduserencryptcert').val().toLowerCase(), "ServerDate": dscDate};
		   $.ajax({
		        url: myurl,
		        type: 'POST',
		        dataType: 'json',
		        contentType: 'application/json; charset=utf-8',
		        data: JSON.stringify(jsondata),
		        success: function (response) {
		        	if(response.flag==true || response.flag==='true'){
		        	 $.each(response.encrytedFormDataRes, function(key, val1) {
		            	  $("#"+key).val(val1);
		            	});
		        	  //mappeddata = MakeMap();
		        	    var jsondata1 = {"methodName": "decryptFormDataDSC","serialno":$('#loggeduserencryptcert').val().toLowerCase(), "decryptFormData": response.encrytedFormDataRes , "ServerDate": dscDate};
		  		   $.ajax({
		  		        url: myurl,
		  		        type: 'POST',
		  		        dataType: 'json',
		  		        contentType: 'application/json; charset=utf-8',
		  		        data: JSON.stringify(jsondata1),
		  		        success: function (response) {
		  		        	if(response.flag==true || response.flag==='true'){
		  		        	 $.each(response.decrytedFormDataRes, function(key, val1) {
		  		            	  $("#"+key).val(val1);
		  		            	});
		  		        	alert("Data Encryption verified !!! ");
      	    				validationObj.isSigned=true;
      	    		   	 	$("#change").removeAttr("disabled");
      	    		   	 	
      	    			    $("#encrypt").attr("disabled","disabled");
  		  		         }
		  		        }, error: function () {
		  		        	$("#encrypt").removeAttr('disabled');
		 	    		   //document.getElementById("myCheck").checked=false;
		  		            alert("Error connecting to PKI Component");
		  		        }
		  		    });
		        }else{
		        	$("#encrypt").removeAttr('disabled');
		    		   //document.getElementById("myCheck").checked=false;
		        	alert(response.msg);
		         //   alert("Error connecting to PKI Component");
		        }
		        }, error: function () {
		        	$("#encrypt").removeAttr('disabled');
		    		   //document.getElementById("myCheck").checked=false;
		            alert("Error connecting to PKI Component");
		        }
		    });
  		   }else{
  			  alert("It seems your previous bid was initiated with a different certificate. Kindly flush your data to proceed with bid submission using selected certificate !!!");
  			  return false;
  		   }
		   

		    
	 			 	/*uibModalInstance=$uibModal.open({
	 		       	id: 'complexDialog',
	 		          title: 'A Complex Modal Dialog',
	 		         backdrop: 'static',   // This disable for click outside event
	  	    	    keyboard: false ,
	 					templateUrl: '/TestApplets?certtype=ENC',controller: 'bidsubmission',scope: $scope
	 			});*/
		 }
	 }
	 $scope.signterm=function(tenderid,termhash){
		 
		 
		 if($("#myCheck"). prop("checked") == true){
		
			 $("#change1").attr("disabled",true);
				$scope.tenderid= tenderid;
				$scope.signhash= termhash;
				$("#loader-icon").show();
				var dscDateId=$("#dscDateId").val();
		   		 var jsondata = {"methodName": "signData", "textForSign": $.base64.encode(termhash), "serilano": $('#loggedusersigningcert').val().toLowerCase(), "ServerDate": dscDateId};
	   	  	    var myurl=getnCodeUrl();
	   	  	 $("#encrypt").attr('disabled','disabled');
	   	  var tender=$('#tenderid').val();
	   		 $.ajax({
			        url: myurl,
			        type: 'POST',
			        dataType: 'json',
			        contentType: 'application/json; charset=utf-8',
			        data: JSON.stringify(jsondata),
			        success: function (result) {
			        	
			        	if(result.flag==true || result.flag==='true'){
			        		var csrftoken = $("meta[name='_csrf']").attr("content");
              	    		$http .post(
									'/bidsubmission/savevenderterm?_csrf='+csrftoken,{"tenderId":tender,"signature":result.hash}).success(function(data) {
										if(data.RESULT=="success"){
											validationObj.isSigned=true;
											alert("Terms & Conditions signed.");
											$("#myCheck").attr("disabled",true);
											$("#Proceed").attr("disabled",false);
											 $("#encrypt").removeAttr('disabled');
											$("#change1").removeClass("btn1");
										     $("#change1").addClass("btn");
										     $("#change1").removeAttr('disabled');
										}else if(data.RESULT=="underAmendment"){
											 $("#underAmendment").submit();
										}
										else{
											alert("Try again.");
											 $("#encrypt").removeAttr('disabled');
										}
									});
              	    		 $('#loader-icon').hide();
			        	}else{
			        		 $('#loader-icon').hide();
			        		   $("#encrypt").removeAttr('disabled');
				    		   document.getElementById("myCheck").checked=false;
					    	  alert(result.msg);
			        	}
			        }, error: function () {
			      
			        	$('#loader-icon').hide();
		        		   $("#encrypt").removeAttr('disabled');
			    		   document.getElementById("myCheck").checked=false;
				    	  alert("please contact help desk");
			        }});
				 }
	 }
	 vm.deleteAllSelectedData= function() {
			if($('.checkclass:checked').length>0)
			{
				
				
				var arrtfileid;
				var arrFileName;
				var i = 0;
				var bidsubfolderid;
				var allcheckBox = document
						.getElementsByClassName('itemchk');
				
				var flag=false;
			/*	 var x=document.getElementById('file0'+(i+2)).value;
				 alert(x);*/
				for (var start = 0; start < allcheckBox.length; start++) {
					 if(allcheckBox[start].checked){
						 if(!flag){
							 arrtfileid=allcheckBox[start].value;
							 arrFileName=document.getElementById('file'+(start+1)).value;
							 flag=true;
						 }else{
							 arrtfileid=arrtfileid+","+allcheckBox[start].value;
							 arrFileName=arrFileName+","+document.getElementById('file'+(start+1)).value; 
						 }
						 
						  bidsubfolderid=document.getElementById('bidsubfolderid').value;
						// alert("subfolderid==="+bidsubfolderid);
						
					 }
				}
				console.log(arrtfileid)
			//	alert("arrtfileid= "+arrtfileid);
			//	 alert( "Filename= "+arrFileName);
				 var csrftoken = $("meta[name='_csrf']").attr("content");
			$http
						.post(
								"/deletefileofvendor?_csrf="+csrftoken+"&arrtfileid="+arrtfileid+"&arrFileName="+arrFileName+"&bidsubfolderid="+bidsubfolderid
								)
						.success(
								function(data, status) {
									alert("Selected Files have been deleted successfully.")
									  window.location.reload();
								 	 //.replace('/bidsubmission/upload-file' )
								})
			}
			else
				{
					alert("Please select at least one item.");
				}
		};
	 
		$scope.dataEncArray = [];
		 $scope.dataDescArray = [];
		$scope.decryptDataValidation= function(){
			var len=$scope.dataEncArray.length
			  var datadescflag=true;
			for(var i=0;i<len;i++){
				var encrypteddata=$scope.dataEncArray[i];
			 	var qs1 = {data:encrypteddata,alias:certSerialNo};
			 	$.ajax({
      	    		 url: "http://localhost:9190/data/decrypt", 
      	    		 type: "GET",
      	    		 data:qs1,
      	    		 async:false,
      	    		 success: function(result){
      	    			 
      	    			if(datadescflag && (result==null || result.trim()==null || result.trim()=='null' || result.trim()=="")){
      	    				 alert("Data Description Verification is fail.Please contact Help Desk !!!");
      	    				datadescflag=false;
      	    				 $("#encrypt").removeAttr('disabled');
      	    				 return false;
      	    			 }else if(datadescflag){
      	    				 if(result.trim().toLowerCase()!=$scope.dataArray[i].trim().toLowerCase()){
      	    					alert("Data Decryption Fail.");
      	    					datadescflag=false;
      	    					 $("#encrypt").removeAttr('disabled');
         	    				 return false;
      	    					 
      	    				 }
      	    				 else{
      	    			 if(i==0){
      	    				$("#tenderids").val(result); 
      	    			}else if(i==1){
      	    				$("#userids").val(result); 
      	    			}else if(i==2){
      	    				$("#companyNameids").val(result); 
      	    			}else if(i==3){
      	    				$("#emailIds").val(result); 
      	    			}else if(i==4){
      	    				$("#cdateids").val(result); 
      	    				alert("Data Encryption verified !!! ");
      	    				validationObj.isSigned=true;
      	    		    	$("#change").removeClass("btn1");
      	    			     $("#change").addClass("btn");
      	    			   $("#encrypt").removeAttr('disabled');
      	    				
      	    			 var tenderid1=  $("#tenderids").val();
      	    				$.ajax({
      	    				  "type" : "POST",
      	    				  "url" : '/bidsubmission/updatesignjvstatus',
      	    				  "data" : {
      	    				  	tenderid : tenderid1,
      	    				  },
      	    				  "success" : function (response) {
      	    			//alert(response);
      	    				 		
      	    				 	}
      	    				  });
      	    			} 
      	    				 }
      	    			 }
      	    			 
      	    		 }});
				
			
				 
			 }
		}
	 
		
	 
		 
	 $scope.close = function () {  
		 $("#encrypt").prop('disabled','disabled');
	       uibModalInstance.close();
	       
	       if($scope.action=="verifydataencryption"){
	    	   if(SerialNo==$('#loggeduserencryptcert').val().toLowerCase()){
	    		   var ifExistSerialNo=$('#bidderTenderSerialNo').val().toLowerCase();
	    		   if(ifExistSerialNo==null || ifExistSerialNo.trim()=="" || ifExistSerialNo.trim()=="0" || SerialNo==ifExistSerialNo ){
	    		   $scope.dataArray[0]=$("#tenderids").val(); 
	    			 $scope.dataArray[1]=$("#userids").val(); 
	    			 $scope.dataArray[2]=$("#companyNameids").val(); 
	    			 $scope.dataArray[3]=$("#emailIds").val(); 
	    			 $scope.dataArray[4]=$("#cdateids").val(); 
	    			 var len=$scope.dataArray.length;
	    		   var tender=$('#tenderid').val();
	    			//var len=$scope.dataArray.length;
	    		   var dataencflag=true;
	    			 for(var i=0;i<len;i++){
	    				var dataa=$scope.dataArray[i];
	    				 var qs = {data:dataa,alias:certSerialNo};
	    				 $.ajax({
	           	    		 url: "http://localhost:9190/data/encrypt"+qs, 
	           	    		 type: "GET",
	           	    		 data:qs,
	           	    		 async:false,
	           	    		 success: function(result){
	           	    			 if(dataencflag && (result==null || result.trim()==null || result.trim()=='null' || result.trim()=="")){
	           	    				 alert("Data Encryption Verification is fail.Please contact Help Desk !!!");
	           	    				dataencflag=false;
	           	    			 $("#encrypt").removeAttr('disabled');
	           	    				 return false;
	           	    			 }else if(dataencflag){
	           	    				$scope.dataEncArray[i]=result;
		           	    			 if(i==0){
		         	    				$("#tenderids").val(result); 
		         	    			}else if(i==1){
		         	    				$("#userids").val(result); 
		         	    			}else if(i==2){
		         	    				$("#companyNameids").val(result); 
		         	    			}else if(i==3){
		         	    				$("#emailIds").val(result); 
		         	    			}else if(i==4){
		         	    				$("#cdateids").val(result); 
		         	    				$timeout(function () {
		         	    					$scope.decryptDataValidation();
		         	    			    }, 1000);
		         	    				
		         	    			}  
	           	    			 }
	           	    			
	           	    			
	           	    		 }});
	    			 }
	    			 
	    			
	    	 /*  var planeData=$scope.data;
	    	   
	           	var qs = {data:planeData,alias:certSerialNo};
	           		 	$.ajax({
	           	    		 url: "http://localhost:9190/data/encrypt"+qs, 
	           	    		 type: "GET",
	           	    		 data:qs,
	           	    		 success: function(result){
	           	    		 console.log(result);
	           	    		var encrypteddata=result;	        	           	
	        	           	var qs1 = {data:encrypteddata,alias:certSerialNo};
	        	           		 	$.ajax({
	        	           	    		 url: "http://localhost:9190/data/decrypt", 
	        	           	    		 type: "GET",
	        	           	    		 data:qs1,
	        	           	    		 success: function(result){
	        	           	    			 result=result.trim();
	        	           	    		 console.log(result);
	        	           	    		console.log(planeData);
	        	           	    		//console.log($scope.datahash);
	        	           	    		console.log(planeData==result);
	        	           	    	     if(planeData==result){
	        	           	    	    	 alert("Data Encryption Verified.");
	        	           	    	    	$http
	        	    						.post(
	        	    								"/bidsubmission/LogsForDataEncryption",{"tenderId":tender}
	        	    								)
	        	           	    	    	validationObj.isSigned=true;
	        	           	    	    	$("#change").removeClass("btn1");
										     $("#change").addClass("btn");
	        	           	    	     }else{
	        	           	    	    	alert("Data Encryption Fail.");
	        	           	    	     }
	        	           	    	    }});
	           	    		 
	           	    	    }});*/

	    	   }else{
	    		   alert("It seems your previous bid was initiated with a different certificate. Kindly flush your data to proceed with bid submission using selected certificate !!!");
	    		   $("#encrypt").removeAttr('disabled');
	    	   }
	    	   }else{
	    		   
	    		   alert("Please Select Your Registered certificate.");
	    		   $("#encrypt").removeAttr('disabled');
	    		   document.getElementById("myCheck").checked=false;
	    		  
	    	   }
	       }else{
	    	   /*if(SerialNo==$('#loggedusersigningcert').val().toLowerCase()){
	       			console.log($scope.signhash);
	       			console.log($scope.tenderid);
	       			var tender=$('#tenderid').val();//$scope.tenderid;tenderid
	       			var hashedData=$scope.signhash;
	       			console.log(certSerialNo);
	              	var qs = {data:hashedData,alias:certSerialNo};
	              		 	$.ajax({
	              	    		 url: "http://localhost:9190/data/signature", 
	              	    		 type: "GET",
	              	    		 data:qs,
	              	    		 success: function(result){
	              	    		 console.log(result); 
	              	    		if(result==null || result=="null" || result==""){
	              	    			 alert("Signing failed\nPlease Sign Again !!!");
	              	    			 $("#encrypt").removeAttr('disabled');
	              	    			 return false;
	              	    		}else{
	              	    			var csrftoken = $("meta[name='_csrf']").attr("content");
	              	    		$http .post(
										'/bidsubmission/savevenderterm?_csrf='+csrftoken,{"tenderId":tender,"signature":result}).success(function(data) {
											console.log(data.RESULT);
											if(data.RESULT=="success"){
												validationObj.isSigned=true;
												alert("Terms & Conditions signed.");
												$("#myCheck").attr("disabled",true);
												$("#Proceed").attr("disabled",false);
												 $("#encrypt").removeAttr('disabled');
												$("#change1").removeClass("btn1");
											     $("#change1").addClass("btn");
											}else if(data.RESULT=="underAmendment"){
												 $("#underAmendment").submit();
											}
											else{
												alert("Try again.");
												 $("#encrypt").removeAttr('disabled');
											}
										});
	              	    		}
	              	    			var setdata = {"tenderid":"sss"};
			              	    		$.ajax({
				              	  			type:"POST",
				              	  	        url:"/bidsubmission/savevenderterm",
				              	  	        data:setdata,
				              	  	        success: function(response){
				              	  	            console.log(response);  
				              	  	            alert("Terms & Conditions signed.");
				              	  	        }
			              	    		});
	              	    	    }}); 
	    	   }else{
	    		   alert("Please Select Your Registered certificate.");
	    		   $("#encrypt").removeAttr('disabled');
	    		   document.getElementById("myCheck").checked=false;
	    	   }*/
	       }
	          		    };
	          		    
	          		  $scope.signterms=function(tenderid){
	          			$('#loader-icon').show();
	          			$("#change1").attr("disabled",true);
	          			$("#myCheck").attr("disabled",true);
	          			var csrftoken = $("meta[name='_csrf']").attr("content");
	          			var tender=$('#tenderid').val();
	          			$http .post('/bidsubmission/savevenderterm?_csrf='+csrftoken,{"tenderId":tender}).success(function(data) {
										//console.log(data.RESULT);
										if(data.RESULT=="success"){
											$('#loader-icon').hide();
											alert("Terms & Conditions signed.");
										     $("#change1").removeAttr('disabled');
										     window.reload();
										     $("#myCheck").attr("disabled",true);
										}else{
											$('#loader-icon').hide();
											alert("Try again.");
											$("#myCheck").removeAttr("disabled");
										}
									});
	          			$('#loader-icon').hide();
	          				 };
	        $scope.confirmcontinue=function(tenderid,pageType){ 
	        	 //$("#change").prop('disabled','disabled');
	        	$('#loading').show();
	        	// $('#loading').fadeIn();
	        	 $("#change").prop('disabled','disabled');
	        	if($scope.isSigned==true)
	        	validationObj.isSigned=$scope.isSigned;
	        	if(validationObj.isSigned)
	        	{
	        	//alert(tenderid);
	        	//alert(decrypterMap);
	        	//alert(altDecrypterMap);
	        	var bidEnvelopeFlag=$('#bidEnvelopeFlag').val();
	        	//alert("bidEnvelopeFlag==>"+bidEnvelopeFlag);
	        	var flage=true;
	        	/*if(bidEnvelopeFlag=="true" || bidEnvelopeFlag ==true){
	        		//window.location.href = '/bidsubmission/pay-fee?tenderid='+tenderid;
	        		if($('#itemcount').val()==0)
	        			{
	        				window.location.href = '/bidsubmission/tender-stage?tenderid='+tenderid;
	        				$("#tenderId").val(tenderid);
	        				$("#form2").submit();
	        			}
	        		else
	        			{
	        				$("#tenderIds").val(tenderid);
	        				$("#form1").submit();
	        			}
	        	}else{*/
	        	var dataErrFlag=false;
	        	var dataArr=[];
	        	var stageArr=[];
	        	 
	        	$('#decrypter').find('tr').each(function() {
	        		
	        		if(!dataErrFlag){
	        			var decrypterKeyArr = [];
			        	 var alternateKeyArr = [];
	        			var decrypterIds=[];
	        			var alternatedecrypterids=[];
	        		//var rowData="";
	        		var stageid="";
	        		var decrypterSize=0;
	        	//	var serialno=
	        		//rowData=rowData+$('#loggeduserencryptcert').val().toLowerCase()+"~~~~";
					//console.log($(this).find('input').attr('id'));
					//console.log($(this).find('input').attr('attr'));
					//console.log($(this).find('input').val() || $(this).text());
					//alert($(this).find('input').attr('id'));
	        		$(this).find('td').each(function() {
	        			if($(this).find('input').attr('id')!=null && $(this).find('input').attr('id')!='undefined'){
	        					var val=$(this).find('input').val();
	        					if(val!=null && val!=undefined){
	        						var arr=val.split("~~");
	        						stageid=arr[2];
	        						decrypterSize=arr[1];
	        						if(arr[0]==='current'){
	        							decrypterKeyArr.push(arr[4])
	        							decrypterIds.push(arr[3]);
	        						}else if(arr[0]==='alternate'){
	        							alternateKeyArr.push(arr[4]);
	        							alternatedecrypterids.push(arr[3]);
	        						}
		        						
	        						
	        					}
	        					//rowData=rowData+($(this).find('input').val())+"~~~~";
						}
	        		});
	        		 var dscDate=$("#dscDateId").val();
	        		 var myurl=getnCodeUrl();
	        		 if(alternateKeyArr==null || alternateKeyArr.length===0){
	        			 alternateKeyArr="";
	        		 }
	        		 
	        	//	 var jsondata = {"methodName": "encryptDataNprocure", "srno": "", "PublicKey": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwP0wdFNt1K1fZ451lXAlj4/QWZHm8rhF2MUykB10BeAqX7/UfQBhJI4lj9xoB8K5B8ery9WvSlxRhzvt0I8Eei7UvfiRvBFrA+nRwm9Pvrh/KdErW6iMGhDDNTq9pwC1KlrnZxI2/6Azu7ZQpFr9t54LBncpZOF0ezzwR9HWdsHQyBcErkTSOEyr+qY6t2493MNrzyFDEq++ZKgnjtnRrYmpQeim+h/NiWHwX6CS9lE8LdnOoe8QY/3F4YDv1v9IjDp73td9TfUaQCJGiVLAaEJ9QZecgF5VqFiFXD2TFAV8cu6siNWdiDG3kCUlrcrXNa1FuamVszG54x3PewWZlQIDAQAB,MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwP0wdFNt1K1fZ451lXAlj4/QWZHm8rhF2MUykB10BeAqX7/UfQBhJI4lj9xoB8K5B8ery9WvSlxRhzvt0I8Eei7UvfiRvBFrA+nRwm9Pvrh/KdErW6iMGhDDNTq9pwC1KlrnZxI2/6Azu7ZQpFr9t54LBncpZOF0ezzwR9HWdsHQyBcErkTSOEyr+qY6t2493MNrzyFDEq++ZKgnjtnRrYmpQeim+h/NiWHwX6CS9lE8LdnOoe8QY/3F4YDv1v9IjDp73td9TfUaQCJGiVLAaEJ9QZecgF5VqFiFXD2TFAV8cu6siNWdiDG3kCUlrcrXNa1FuamVszG54x3PewWZlQIDAQAB","PublicKeySec":"", "splitcriteria": "2", "ServerDate": "25/04/2018 12:09 +0530"};
	        		 var jsondata = {"methodName": "encryptDataNprocure", "srno": $('#loggeduserencryptcert').val().toLowerCase(), "PublicKey": decrypterKeyArr,"PublicKeySec":alternateKeyArr, "splitcriteria": parseInt(decrypterSize), "ServerDate": dscDate};
	        		 $.ajax({
			  		        url: myurl,
			  		        type: 'POST',
			  		        dataType: 'json',
			  		        contentType: 'application/json; charset=utf-8',
			  		        data: JSON.stringify(jsondata),
			  		        async: false,
			  		        success: function (response) {
			  		        	
			  		        	if(response.flag==true || response.flag==='true'){
			  		        		 var jsonmap = {"decryptersize":decrypterSize,"decrypterIds": decrypterIds,"alternatedecrypterids":alternatedecrypterids,"encKey":response.encryptedSymmetricData,"stageid":stageid};
			  		        		if(!dataErrFlag){
			  		        			dataArr.push(jsonmap);
			      	    				stageArr.push(stageid);
			  		        		}
			  		        		$("#change").removeAttr('disabled');
			  		        	}else{
			  		        		dataErrFlag=true;
		      	    				$("#change").removeAttr('disabled');
		      	    				alert(response.msg);
	      	    					//alert("Bidder's Keys encryption not performed.Please Contact Help Desk !!!");
	      	    					return false;
			  		        	}
			  		        	
			  		        }, error: function () {
			  		        	dataErrFlag=true;
	      	    				$("#change").removeAttr('disabled');
      	    					alert("Bidder's Keys encryption not performed.Please Contact Help Desk !!!");
      	    					return false;
			  		        }
			  		    });
	        		 
	        		 
	        		 //console.log(rowData);
	        		//var qs = {rowdata:rowData};
	        	/*	$.ajax({
	        			  type: "POST",
	        			  url: 'http://localhost:9190/data/encgenerateKey',
	        			  data: rowData,
	        			  async: false,
	        			  success: function(result){
	        				  var obj = jQuery.parseJSON(result);
	      	    			var dataFlag=true;
	      	    			$.each(obj, function(key,value) {
	      	    				
	      	    				if(key=="dataflag" ){
                                if(value=="certificatenotfound"){
	      	    					dataErrFlag=true;
	      	    					$("#change").removeAttr('disabled');
	      	    					alert("Bidder's Enc Dsc Certificate not Found.Please Contact Help Desk !!!");
	      	    					return false;
	      	    			}else if(value=="bidderencnotperformed"){
	      	    				dataErrFlag=true;
	      	    				$("#change").removeAttr('disabled');
      	    					alert("Bidder's Keys encryption not performed.Please Contact Help Desk !!!");
      	    					return false;
	      	    			}
	      	    					
	      	    				}
	      	    				
	      	    			});
	      	    			
	      	    			if(!dataErrFlag){
	      	    				dataArr.push(JSON.parse(result));
	      	    				stageArr.push(stageid);
	      	    			}
	        			  }
        			});*/
	           	    	//console.log(JSON.parse(result));
	        				  
	        				 /* $.ajax({
	    	        			  type: "POST",
	    	        			  url: '/bidsubmission/savebidderkey',
	    	        			  data: {"stageid":stageid,"tenderId":tenderid,"data":JSON.parse(result)},
	    	        			  async: false,
	    	        			  success: function(data){
	    	        				  console.log(data.RESULT);
	 									if(data.RESULT=="success"){
	 										alert("key generated.");
	 									}else{
	 										alert("Contact customer support!!");
	 									}
	    	        			  }
	        				  });*/
	           	    		/* $http.post(
	 								"/bidsubmission/savebidderkey",{"stageid":stageid,"tenderId":tenderid,"data":JSON.parse(result)}).success(function(data) {
	 									console.log(data.RESULT);
	 									if(data.RESULT=="success"){
	 										//alert("key generated.");
	 									}else{
	 										if(flage){flage=false;}
	 										alert("Contact customer support!!");
	 									}
	 								});*/
	           	    	  
	        		
	        	}
					
				});
	       if(!dataErrFlag){
	        		var csrftoken = $("meta[name='_csrf']").attr("content");
	        		var editbid=document.getElementById("editbid").value;
	        	//	alert(editbid);
	        		$http.post(
								'/bidsubmission/savebidderkeywithAllStages1?_csrf='+csrftoken,{"stageids":stageArr,"data":dataArr}).success(function(data) {
									console.log(data.RESULT);
									if(data.RESULT=="success"){
										if($('#itemcount').val()==0)
					        			{

					        				//window.location.href = '/bidsubmission/tender-stage?_csrf='+csrftoken+'&tenderid='+tenderid;
											$("#tenderId").val(tenderid);
											$("#form2").submit();
											$('#loader-icon').hide();
											//alert(editbid);
//					        				window.location.href = '/bidsubmission/tender-stage';

					        			}
					        		else
					        			{

					        				//window.location.href = '/bidsubmission/item-selection1?_csrf='+csrftoken+'&tenderid='+tenderid;
					        			$("#tenderIds").val(tenderid);
					        			$("#form1").submit();
					        			$('#loader-icon').hide();
//					        				window.location.href = '/bidsubmission/item-selection1';

					        			}
									}
									else if(data.RESULT=="underAmendment"){
										 $("#underAmendment").submit();
										 $('#loader-icon').hide();
									}
									else{
										if(flage){flage=false;}
										$('#loading').hide();
										$("#change").removeAttr('disabled');
										alert("Contact customer support!!");
										$('#loader-icon').hide();
									}
								});
	        	}else{
	        		$('#loading').hide();
	        		$("#change").removeAttr('disabled');
	        		$('#loader-icon').hide();
	        	}
	        	
//	        	}
	        	
	        	/*for ( var iterable_element in altDecrypterMap) {
					alert(iterable_element);
				}*/
	        	
	        	 
	        	/*var obj = jQuery.parseJSON(decrypterMap);
	    			$.each(obj, function(key,value) {
	    			  alert(key+':'+value);
	    			  //$('#'+key).val(value);
	    			});*/
	        	
	        	}
	        	else{
	        		alert("Please Verify Data Encryption");
	        		$('#loader-icon').hide();
	        		$('#loading').hide();
	        		$("#change").removeAttr('disabled');
	        	}
	        	
	        
	        };
	        
	
	        $scope.setAutoSearchVariable = function(searchKeyWordDto){
	       	 var searchKeyWordDto = angular.fromJson(searchKeyWordDto);
	            //console.log(searchKeyWordDto);
	            $scope.advsearch = true;  //Always assume normal case
	            angular.forEach(searchKeyWordDto, function(value, key) {
	                console.log('key:', key+'  value:', value);
	                if(key == 'search' && value != null && value == 'NORMAL'){
	               	 $scope.advsearch = true;
	                }
	                
	                if(key == 'search' && value != null && value == 'ADV'){
	               	 $scope.advsearch = false;
	                }
	                
	                if(key == 'nmskey' && value != null){
	               	 $scope.selectedValue = value;
	                }
	                
	                if(key == 'nmsvalue' && value != null){
	               	 angular.element( document.querySelector('#advstext')).val(value);
	                }
	                
	                if(key == 'tenderid' && value != null){
		               	 angular.element( document.querySelector('#tenderid')).val(value);
		               }
	                if(key == 'clientname' && value != null){
	                	
	                	 $scope.clientid = value;
	                	 $scope.findLocationOnSelectedClientId($scope.clientid);
	                	 angular.element( document.querySelector('#clientname')).val(value);
		                }
	                if(key == 'tlocation' && value != null){
	                	
	                	$scope.locationid = value;
	                	if($scope.clientid!=null && $scope.clientid!='')
	                	$scope.findDeptOnSelectedLocation($scope.clientid,$scope.locationid);
	                	 angular.element( document.querySelector('#location')).val(value);
	                	}
	                if(key == 'tdepartment' && value != null){
	                	$scope.depttid = value;
	                	$scope.findSubDeptOnSelectedDept($scope.depttid);
	                	}
	                if(key == 'tsubdepartment' && value != null){
	                	  $scope.subdeptid = value;
	                	}
	                if(key == 'tendernoticeno' && value != null){
	               	 angular.element( document.querySelector('#tnoticeno')).val(value);
	                }
	                
	                if(key == 'tendertitle' && value != null){
	               	 angular.element( document.querySelector('#tendertitle')).val(value);
	                }
	                
	                if(key == 'procurementtype' && value != null){
	               	 angular.element( document.querySelector('#proctype')).val(value);
	                }
	                if(key == 'tendertype' && value != null){
		               	 angular.element( document.querySelector('#tendertype')).val(value);
		                }
	                if(key == 'tproductcat' && value != null){
	               	 angular.element( document.querySelector('#productcategory')).val(value);
	                }
	                
	                if(key == 'tsectorcat' && value != null){
	               	 angular.element( document.querySelector('#sectorcategory')).val(value);
	                }
	                
	                if(key == 'tenderpublishdate' && value != null){
		               	 angular.element( document.querySelector('#tenderpublishdate')).val(value);
		                } 
	                if(key == 'bidclosedate' && value != null){
		               	 angular.element( document.querySelector('#bidclosedate')).val(value);
		                }
	                if(key == 'valuecriteria' && value != null){
		               	 angular.element( document.querySelector('#valuecriteria')).val(value);
		             }
	                
	                if(key == 'parameter1' && value != null){
		               	 angular.element( document.querySelector('#parameter1')).val(value);
		             }
	                if(key == 'parameter2' && value != null){
		               	 angular.element( document.querySelector('#parameter2')).val(value);
		             }
	                if(key == 'parameter3' && value != null){
		               	 angular.element( document.querySelector('#parameter3')).val(value);
		             }
	                
	              });
	              
	            console.log("ClientID===="+$scope.clientid);
	            console.log("locationid===="+$scope.locationid);
	            console.log("depttid===="+$scope.depttid);
	            console.log("subdeptid===="+$scope.subdeptid);
		       
	       }
	      
	       	$scope.findLocationOnSelectedClientId = function(clientid){
	       		
	      	    			$('#location').empty();	
	      	    			$('#departmentName').empty();
	      	    			$('#subDepartmentName').empty();
	      	    			$.ajax({
	      	    			url: "locationlist",
	      	    			type: "get",
	      	    			data: {name:clientid},
	      	    			success: function(data)
	      	    			{
	      	    				
 	      	    				//$('#departmentName').empty();
	      	    				//$('#subDepartmentName').empty();//remove all child nodes
	      	    				var newOption = $('<option value="">----Select----</option>');
	      	    				
	      	    				$('#location').append(newOption);
	      	    				var newOption = $('<option value="">----Select----</option>');
	      	    				$('#departmentName').append(newOption);
	      	    				var newOption = $('<option value="">----Select----</option>');
	      	    				$('#subDepartmentName').append(newOption);
	      	    				for(var datafield in data)
	      	    				{
	      	    					var a=data[datafield]["id"];
	      	    							newOption = $('<option value="'+data[datafield]["id"]+'">'+data[datafield]["location"]+'</option>');
	      	    							$('#location').append(newOption);
	      	    				}
	      	    				angular.element( document.querySelector('#location')).val($scope.locationid);
	      	    			}
	      	    		});
	       	}
	        
	    	$scope.findDeptOnSelectedLocation = function(clientid,locationid){
	    
	    			$('#departmentName').empty();
	    			$('#subDepartmentName').empty();
	    			$.ajax({
	    			url: "departmentlist",
	    			type: "get",
	    			data: {name:locationid , clientid:clientid},
	    			success: function(data)
	    			{
	    				//$('#departmentName').empty(); //remove all child nodes
	    				
	    				var newOption = $('<option value="">----Select----</option>');
	    				$('#departmentName').append(newOption);
	    				for(var datafield in data)
	    				{
	    					var a=data[datafield]["id"];
	    							newOption = $('<option value="'+data[datafield]["id"]+'">'+data[datafield]["departmentname"]+'</option>');
	    							$('#departmentName').append(newOption);
	    				}
	    				angular.element( document.querySelector('#departmentName')).val($scope.depttid);
	    			}
	    		});
	    	}
	       	
	    	$scope.findSubDeptOnSelectedDept = function(deptid){
    			$('#subDepartmentName').empty();			
    			$.ajax({
    			url: "subdeptlist",
    			type: "get",
    			data: {name:deptid},
    			success: function(data)
    			{
    				
    				//$('#subDepartmentName').empty(); //remove all child nodes
    				var newOption = $('<option value="">----Select----</option>');
    				$('#subDepartmentName').append(newOption);
    				for(var datafield in data)
    				{
    					var a=data[datafield]["deptid"];
    							newOption = $('<option value="'+data[datafield]["deptid"]+'">'+data[datafield]["deptname"]+'</option>');
    							$('#subDepartmentName').append(newOption);
    				}
    				angular.element( document.querySelector('#subDepartmentName')).val($scope.subdeptid);
    			}
    		});
    			
	    	}
}]);

function MakeMap(){
	 var myMap = new Map();
	 myMap.set("tenderids", $("#tenderids").val());
	 myMap.set("userids", $("#userids").val());
	 myMap.set("companyNameids", $("#companyNameids").val());
	 myMap.set("emailIds", $("#emailIds").val());
	 myMap.set("cdateids", $("#cdateids").val());
	    var jsonObj = [];
	    var jsonstr;
	    myMap.forEach(function (val, key) {
	        var tempObj = {};
	        tempObj[key] = val;
	        jsonObj.push(tempObj)
	        jsonstr = JSON.stringify(jsonObj);

	    });
	    return jsonstr;
}